{"version":3,"file":"index.js","sources":["../node_modules/just-remove/index.js","../node_modules/just-extend/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-runtime/regenerator/index.js","../src/loginStatus.js","../src/loginModule.js"],"sourcesContent":["module.exports = remove;\n\n/*\n  remove([1, 2, 3, 4, 5, 6], [1, 3, 6]); // [2, 4, 5]\n*/\n\nfunction remove(arr1, arr2) {\n  if (!Array.isArray(arr1) || !Array.isArray(arr2)) {\n    throw new Error('expected both arguments to be arrays');\n  }\n  var result = [];\n  var len = arr1.length;\n  for (var i = 0; i < len; i++) {\n    var elem = arr1[i];\n    if (arr2.indexOf(elem) == -1) {\n      result.push(elem);\n    }\n  }\n  return result;\n}\n","module.exports = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (!result || (typeof result != 'object' && typeof result != 'function')) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (extender.hasOwnProperty(key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(true, result[key] || base, value);\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","import remove from \"just-remove\";\r\n\r\nexport let LoginStatusEnum = {\r\n    NotLoggedIn: 0,\r\n    LoggingIn: 1,\r\n    LoggedIn: 2,\r\n    LoggedInFailed: 3,\r\n};\r\n\r\nconst LoginStatusPrivate = {\r\n    status: Symbol('status'),\r\n    callbacks: Symbol('callbacks')\r\n}\r\nexport class LoginStatus {\r\n    constructor() {\r\n        this[LoginStatusPrivate.status] = LoginStatusEnum.NotLoggedIn;\r\n        this[LoginStatusPrivate.callbacks] = [];\r\n    }\r\n\r\n    get status() {\r\n        return this[LoginStatusPrivate.status];\r\n    }\r\n\r\n    subscribeStatusChanged(callback) {\r\n        this[LoginStatusPrivate.callbacks].push(callback);\r\n        return {\r\n            unSubscribe() {\r\n                remove(this[LoginStatusPrivate.callbacks], callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    cleanSubscription() {\r\n        this[LoginStatusPrivate.callbacks].length = 0;\r\n    }\r\n\r\n    changeStatus(status) {\r\n        let oldStatus = this[LoginStatusPrivate.status];\r\n        if (oldStatus == status) {\r\n            return;\r\n        }\r\n\r\n        this[LoginStatusPrivate.status] = status;\r\n        this[LoginStatusPrivate.callbacks].forEach(item => {\r\n            try {\r\n                item(oldStatus, status);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n}","import { LoginStatus, LoginStatusEnum } from \"./loginStatus\";\r\nimport extend from 'just-extend';\r\n\r\nconst defaultOptions = {\r\n    loginTokenStorageName: 'login-token',\r\n    thirdPartyLoginRequest: async (code) => {\r\n        await Promise.resolve('');\r\n    }\r\n};\r\n\r\nconst privateNames = {\r\n    loginStatus: Symbol('loginStatus'),\r\n    options: Symbol('options'),\r\n};\r\n\r\nexport class LoginModule {\r\n    constructor(options) {\r\n        this[privateNames.options] = extend(true, {}, defaultOptions, options);\r\n        this[privateNames.loginStatus] = new LoginStatus();\r\n    }\r\n\r\n    get status() {\r\n        return this[privateNames.loginStatus];\r\n    }\r\n\r\n    get loginToken() {\r\n        return wx.getStorageSync(this[privateNames.options].loginTokenStorageName)\r\n    }\r\n\r\n    async login() {\r\n        if (this.status.status === LoginStatusEnum.LoggingIn) {\r\n            await new Promise((resolve) => {\r\n                let token = currentLoginStatus.subscribeStatusChanged((oldStatus) => {\r\n                    if (oldStatus == LoginStatusEnum.LoggingIn) {\r\n                        token.unSubscribe();\r\n                        resolve();\r\n                    }\r\n                });\r\n            });\r\n            return;\r\n        }\r\n        try {\r\n            this.status.changeStatus(LoginStatusEnum.LoggingIn);\r\n\r\n            const code = await new Promise(function (resolve, reject) {\r\n                wx.login({\r\n                    success: (res) => {\r\n                        res.code ? resolve(res.code) : reject();\r\n                    },\r\n                    fail: reject,\r\n                });\r\n            });\r\n            // 发起第三方登录\r\n            let newLoginToken = this[privateNames.options].thirdPartyLoginRequest(code);\r\n            if (!newLoginToken) {\r\n                currentLoginStatus.changeStatus(LoginStatusEnum.NotLoggedIn);\r\n                return;\r\n            }\r\n            // 接收并存储第三方登录态\r\n            wx.setStorageSync(this[privateNames.options].loginTokenStorageName, newLoginToken);\r\n\r\n            currentLoginStatus.changeStatus(LoginStatusEnum.LoggedIn);\r\n        }\r\n        catch (e) {\r\n            this.status.changeStatus(LoginStatusEnum.NotLoggedIn);\r\n            throw e;\r\n        }\r\n    }\r\n}"],"names":["remove","arr1","arr2","Array","isArray","Error","result","len","length","i","elem","indexOf","push","extend","args","slice","call","arguments","deep","shift","extenders","extender","key","hasOwnProperty","value","isCloneable","base","obj","toString","global","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","prototype","Generator","generator","Object","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","err","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","this","AsyncIterator","invoke","resolve","reject","record","hasOwn","Promise","__await","then","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","done","GenStateSuspendedYield","iterator","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","Op","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","runtime","regeneratorRuntime","module","exports","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Function","g","hadRuntime","getOwnPropertyNames","oldRuntime","require$$0","e","LoginStatusEnum","LoginStatusPrivate","LoginStatus","status","NotLoggedIn","callbacks","callback","oldStatus","log","defaultOptions","code","privateNames","LoginModule","options","loginStatus","LoggingIn","token","currentLoginStatus","subscribeStatusChanged","unSubscribe","changeStatus","login","res","thirdPartyLoginRequest","setStorageSync","loginTokenStorageName","newLoginToken","LoggedIn","wx","getStorageSync"],"mappings":"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"}